/* Core */
import { createSlice, type PayloadAction } from '@reduxjs/toolkit'

/* Instruments */
import { incrementAsync } from './thunks'

const initialState: ErrorCountSliceState = {
  value: 0,
}

export const errorCountSlice = createSlice({
  name: 'errorCount',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    increment: (state) => {
      state.value += 1
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(incrementAsync.pending, (state) => {
      })
      .addCase(incrementAsync.fulfilled, (state, action) => {
        state.value += action.payload
      })
  },
})

/* Types */
export interface ErrorCountSliceState {
  value: number
}
